Env	cps/environment.html#Env	environment: Env	
len	cps/environment.html#len,Env	environment: len(e: Env): int	
isEmpty	cps/environment.html#isEmpty,Env	environment: isEmpty(e: Env): bool	
inherits	cps/environment.html#inherits,Env	environment: inherits(e: Env): NimNode	
identity	cps/environment.html#identity,Env	environment: identity(e: Env): NimNode	
isDirty	cps/environment.html#isDirty,Env	environment: isDirty(e: Env): bool	
root	cps/environment.html#root,Env	environment: root(e: Env): NimNode	
maybeConvertToRoot	cps/environment.html#maybeConvertToRoot,Env,NimNode	environment: maybeConvertToRoot(e: Env; locals: NimNode): NimNode	
contains	cps/environment.html#contains,Env,NimNode	environment: contains(e: Env; key: NimNode): bool	
makeType	cps/environment.html#makeType,Env	environment: makeType(e: Env): NimNode	
first	cps/environment.html#first,Env	environment: first(e: Env): NimNode	
firstDef	cps/environment.html#firstDef,Env	environment: firstDef(e: Env): NimNode	
get	cps/environment.html#get,Env	environment: get(e: Env): NimNode	
newEnv	cps/environment.html#newEnv,Env	environment: newEnv(parent: Env; copy = off): Env	
storeType	cps/environment.html#storeType,Env	environment: storeType(e: Env; force = off): Env	
newEnv	cps/environment.html#newEnv,NimNode,NimNode,NimNode	environment: newEnv(c: NimNode; store: var NimNode; via: NimNode): Env	
identity	cps/environment.html#identity,Env_2	environment: identity(e: var Env): NimNode	
localSection	cps/environment.html#localSection,Env,NimNode,NimNode	environment: localSection(e: var Env; n: NimNode; into: NimNode = nil)	
continuationReturnValue	cps/environment.html#continuationReturnValue,Env,NimNode	environment: continuationReturnValue(e: Env; goto: NimNode): NimNode	
rewriteReturn	cps/environment.html#rewriteReturn,Env,NimNode	environment: rewriteReturn(e: var Env; n: NimNode): NimNode	
rewriteSymbolsIntoEnvDotField	cps/environment.html#rewriteSymbolsIntoEnvDotField,Env,NimNode	environment: rewriteSymbolsIntoEnvDotField(e: var Env; n: NimNode): NimNode	
createContinuation	cps/environment.html#createContinuation,Env,NimNode	environment: createContinuation(e: Env; goto: NimNode): NimNode	
getException	cps/environment.html#getException,Env	environment: getException(e: var Env): NimNode	
